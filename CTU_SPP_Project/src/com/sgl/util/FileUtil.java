package com.sgl.util;

import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;

public class FileUtil {
	public static String getFileContent(String path) {
		byte[] bytes = null;
		byte[] buf = new byte[1024];
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		FileInputStream fis = null;
		try {
			fis = new FileInputStream(path);
			int readnum = -1;
			while((readnum = fis.read(buf))!=-1)
			{
				out.write(buf, 0, readnum);
			}
			bytes = out.toByteArray();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		finally {
			try {
				fis.close();
				out.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		return new String(bytes);
	}
	
	public static void saveFileName(ArrayList<String> list, String file)
	{
		FileOutputStream out;
		try {
			out = new FileOutputStream(new File(file));
			ObjectOutputStream oos = new ObjectOutputStream(out);
			oos.writeObject(list);
			oos.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
		}

	}
	public static ArrayList<String> fetchFileNam(String file)
	{
		if(file==null || file.length()<1)
			return new ArrayList();
		FileInputStream in;
		try {
			in = new FileInputStream(new File(file));
			ObjectInputStream ois = new ObjectInputStream(in);
			ArrayList<String> list = null;
			list = (ArrayList<String>) ois.readObject();
			ois.close();
			return list;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;

	}
	
	public static void saveObject(Object obj, String file)
	{
		FileOutputStream out;
		try {
			out = new FileOutputStream(new File(file));
			ObjectOutputStream oos = new ObjectOutputStream(out);
			oos.writeObject(obj);
			oos.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
		}

	}
	public static Object fetchObject(String file)
	{
		if(file==null || file.length()<1)
			return null;
		FileInputStream in;
		try {
			in = new FileInputStream(new File(file));
			ObjectInputStream ois = new ObjectInputStream(in);
			Object obj = null;
			obj = ois.readObject();
			ois.close();
			return obj;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;

	}
	public static void saveString(String file, String content, boolean append) {
		if(content==null || file==null)
			return;
		
		BufferedWriter out = null;     
        try {     
            out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file, append)));     
            
            out.write(content);
        } catch (Exception e) {     
            e.printStackTrace();
        } finally {     
            try {     
                if(out != null){  
                    out.close();     
                }  
            } catch (IOException e) {     
                e.printStackTrace();     
            }     
        }     
	}
}
